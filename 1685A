/* header file */
#include<bits/stdc++.h>
#include<stack>
#include <queue>
#include <algorithm>
#include<iostream>
#include<string>
/* for faster cin cout */
#define fast() ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr)
/* sort function */
#define strsort() sort(s.begin(),s.end())
#define arrsort() int n1=sizeof(a)/sizeof(a[0]);sort(a,a+n1)
/* legth function */
#define strlen s.size()
#define arrlen int n1=sizeof(a)/sizeof(a[0])
#define intlen int n2=trunc(log10(n))+1
/* Conver function */
#define csti int csti=stoi(s)
/* Others Sortcut */
#define PI 3.1415926535897932384626433832795
#define nn "\n"
#define yes "YES"
#define no "NO"
#define case "Case "
#define elif else if
#define ll long long
#define lli long long int
/* testcase */
#define test() int t;cin>>t;while(t--)
#define testt() int t;cin>>t;for(int i=1; i<=t; i++)
#define f(i, n) for(int i = 0; i < n; i++)
using namespace std;
const long long MOD = 1e9 + 7;
/* GCD Finding Algo */
int gcd(int a, int b)
{
    if(b==0)
        return a;
    return gcd(b,a%b);
}
/*  let's started  */
void solved()
{
    test()
    {
        int n;
        cin>>n;
        int a[n];
        for(int i=0; i<n; i++)
        {
            cin>>a[i];
        }
        sort(a,a+n);
        if(n&1) cout<<no<<nn;
        else
        {
            int x=n/2;
            vector<int>v;
            for(int i=0; i<x; i++)
            {
                v.push_back(a[i]);
                v.push_back(a[x+i]);
            }
            v.push_back(v[0]);
            int flag=0;
            for(int i=1; i<n; i++)
            {
                if(v[i-1]<v[i]&&v[i]>v[i+1])
                {
                    //cout<<v[i-1]<< ' '<<v[i]<<' '<<v[i+1]<<nn;
                    continue;
                    i+2;
                }
                elif(v[i-1]>v[i]&&v[i]<v[i+1])
                {
                   // cout<<v[i-1]<< ' '<<v[i]<<' '<<v[i+1]<<nn;
                    continue;
                    i+2;
                }
                else
                {
                    //cout<<"Break done"<<nn;
                    flag=1;
                    break;
                }
            }
           if(flag==1) cout<<no<<nn;
            else
            {
                cout<<yes<<nn;
                for(int i=0; i<n; i++)
                {
                    cout<<v[i]<<' ';
                }
                cout<<nn;
            }
        }
    }
}
    int main()
    {
        fast();
        solved();
        return 0;
    }
